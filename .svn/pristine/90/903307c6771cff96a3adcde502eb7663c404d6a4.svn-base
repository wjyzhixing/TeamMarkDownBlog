/**
 * 用户管理文章：
 *
 */
package net.zhaoxuyang.blog.controller;

import javax.servlet.http.HttpSession;
import net.zhaoxuyang.blog.model.Article;
import net.zhaoxuyang.blog.model.User;
import net.zhaoxuyang.blog.service.ArticleService;
import net.zhaoxuyang.blog.service.UserService;
import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.stereotype.Controller;
import org.springframework.web.bind.annotation.DeleteMapping;
import org.springframework.web.bind.annotation.GetMapping;
import org.springframework.web.bind.annotation.PathVariable;
import org.springframework.web.bind.annotation.PostMapping;
import org.springframework.web.bind.annotation.PutMapping;
import org.springframework.web.bind.annotation.RequestMapping;
import org.springframework.web.bind.annotation.ResponseBody;

/**
 *
 * @author zhaoxuyang
 */
//@RequestPermission(value = {Permission.AUTHOR, Permission.ADMINISTRATOR})
@Controller
@RequestMapping("/user/article")
public class UserArticleController {

    @Autowired
    ArticleService articleService;
    @Autowired
    UserService userService;

    /**
     * 新文章发表页面
     *
     * @param authorUsername
     * @return
     */
    @GetMapping("/new")
    public String insertForm(
            @PathVariable String authorUsername
    ) {
        return "ArticleEdit.html";
    }

    /**
     * 新文章发表事件
     *
     * @param authorUsername
     * @param article
     * @param session
     * @return
     */
    @PostMapping("/new")
    @ResponseBody
    public boolean insertAction(
            @PathVariable String authorUsername,
            @PathVariable Article article,
            HttpSession session
    ) {
        User user = (User) session.getAttribute("user");

        boolean result = articleService.insert(article);
        return result;
    }

    @PutMapping("/{articleId}")
    @ResponseBody
    public boolean update(
            @PathVariable String authorUsername,
            @PathVariable Article article,
            HttpSession session
    ) {
        boolean result = articleService.update(article);
        return result;
    }

    @DeleteMapping("/{articleId}")
    @ResponseBody
    public boolean delete(
            @PathVariable String authorUsername,
            @PathVariable Integer articleId,
            HttpSession session
    ) {
        boolean result = articleService.delete(articleId);
        return result;
    }

}
