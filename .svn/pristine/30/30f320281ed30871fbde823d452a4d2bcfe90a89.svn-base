/*
 _     _                   _                                                                 _   
| |__ | | ___   __ _   ___| |__   __ _  _____  ___   _ _   _  __ _ _ __   __ _    _ __   ___| |_ 
| '_ \| |/ _ \ / _` | |_  / '_ \ / _` |/ _ \ \/ / | | | | | |/ _` | '_ \ / _` |  | '_ \ / _ \ __|
| |_) | | (_) | (_| |_ / /| | | | (_| | (_) >  <| |_| | |_| | (_| | | | | (_| | _| | | |  __/ |_ 
|_.__/|_|\___/ \__, (_)___|_| |_|\__,_|\___/_/\_\\__,_|\__, |\__,_|_| |_|\__, |(_)_| |_|\___|\__|
               |___/                                   |___/             |___/ 
 */

package net.zhaoxuyang.blog.interceptor;

import net.zhaoxuyang.blog.model.User;
import java.io.IOException;
import javax.servlet.http.HttpServletRequest;
import javax.servlet.http.HttpServletResponse;
import javax.servlet.http.HttpSession;
import org.slf4j.Logger;
import org.slf4j.LoggerFactory;
import org.springframework.web.servlet.HandlerInterceptor;
import org.springframework.web.servlet.ModelAndView;
/**
 * 项目事件 - 拦截器
 * 拦截以下事件：
 * 1. 新建项目
 * 2. 修改项目
 * 3. 删除项目
 * 4. 查看个人所有项目（树）
 * 5. 发布项目
 */
public class UserInterceptor implements HandlerInterceptor {
    Logger LOG = LoggerFactory.getLogger(getClass());

    /**
     * 未登录（session对象中没有"user"对象）则拦截（/user/**）
     * @param request
     * @param response
     * @param handler
     * @return 
     */
    @Override
    public boolean preHandle(
            HttpServletRequest request,
            HttpServletResponse response,
            Object handler
    ) {
        boolean result = false;
        HttpSession session = request.getSession(false);
        if (session != null) {
            User user = (User) session.getAttribute("user");
            if (user != null) {
                result = true;
            }
        }
        if(!result){
            try {
                response.sendError(403);
            } catch (IOException ex) {
               LOG.error(ex.toString());
            }
        }
        return result;
    }
    
    @Override
    public void postHandle(
            HttpServletRequest request,
            HttpServletResponse response,
            Object handler,
            ModelAndView modelAndView
    ) {

    }

    @Override
    public void afterCompletion(
            HttpServletRequest request,
            HttpServletResponse response,
            Object handler,
            Exception ex
    ) {

    }

}
