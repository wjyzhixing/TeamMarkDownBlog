package net.zhaoxuyang.blog.service.impl;

import com.github.pagehelper.PageHelper;
import com.github.pagehelper.PageInfo;
import java.util.Date;
import java.util.HashMap;
import java.util.List;
import java.util.Map;
import java.util.TreeMap;
import net.zhaoxuyang.blog.mapper.ArticleMapper;
import net.zhaoxuyang.blog.model.Article;
import net.zhaoxuyang.blog.model.ArticleAuth;
import net.zhaoxuyang.blog.model.User;
import net.zhaoxuyang.blog.service.ArticleService;
import org.springframework.beans.factory.annotation.Autowired;

import org.springframework.stereotype.Service;

/**
 *
 * @author zhaoxuyang
 */
@Service
public class ArticleServiceImpl implements ArticleService {

    @Autowired
    ArticleMapper articleMapper;

    @Override
    public boolean insert(Article article) {
        int n = articleMapper.insert(article);
        return n > 0;
    }

    @Override
    public boolean delete(Integer id) {
        Article article = new Article();
        int n = articleMapper.delete(article);
        return n > 0;
    }

    @Override
    public boolean update(Article article) {
        int n = articleMapper.update(article);
        return n > 0;
    }

    @Override
    public Article get(Integer id, Integer auth) {
        Article input = new Article();
        input.setId(id);
        input.setAuth(auth);
        return articleMapper.getById(input);
    }

    @Override
    public List<Article> list(Integer userId) {
        Article article = new Article();
        article.setUserId(userId);
        return articleMapper.listAnd(article);
    }

    @Override
    public List<Article> list() {
        return articleMapper.listAnd(null);
    }

    @Override
    public PageInfo listLikeTitleOrContent(String keyword, Integer auth, Integer pageCurr, Integer pageSize) {

        PageHelper.startPage(pageCurr, pageSize);
        Article article = new Article();
        article.setTitle(keyword);
        article.setMarkdown(keyword);
        List<Article> list = articleMapper.listOr(article);
        //用PageInfo对结果进行包装
        PageInfo pageInfo = new PageInfo(list);
        return pageInfo;

    }

    @Override
    public PageInfo listByCategory(Integer userId, String category, Integer auth, Integer pageCurr, Integer pageSize) {

        PageHelper.startPage(pageCurr, pageSize);
        Article article = new Article();
        article.setUserId(userId);
        article.setCategory(category);
        List<Article> list = articleMapper.listAnd(article);
        //用PageInfo对结果进行包装
        PageInfo pageInfo = new PageInfo(list);
        return pageInfo;
    }

    @Override

    public PageInfo listLikeTag(Integer userId, String tag, Integer auth, Integer pageCurr, Integer pageSize) {
        PageHelper.startPage(pageCurr, pageSize);
        Article article = new Article();
        article.setUserId(userId);
        article.setTags(tag);
        List<Article> list = articleMapper.listAnd(article);
        //用PageInfo对结果进行包装
        PageInfo pageInfo = new PageInfo(list);
        return pageInfo;
    }

    @Override
    public PageInfo listByCreateYearMonth(Integer userId, Date date, Integer auth, Integer pageCurr, Integer pageSize) {
        PageHelper.startPage(pageCurr, pageSize);
        Article article = new Article();
        article.setUserId(userId);
        article.setGmtCreate(date);
        List<Article> list = articleMapper.listAnd(article);
        //用PageInfo对结果进行包装
        PageInfo pageInfo = new PageInfo(list);
        return pageInfo;
    }

    @Override
    public PageInfo list(String username, Integer auth, Integer pageCurr, Integer pageSize) {
        Map<String, Object> map = new HashMap<>();
        map.put("username", username);
        map.put("auth", auth);
        PageHelper.startPage(pageCurr, pageSize);
        List<Article> list = articleMapper.listByUsername(map);
        //用PageInfo对结果进行包装
        PageInfo pageInfo = new PageInfo(list);
        return pageInfo;
    }

}
